git init - создание локального репозитория.
git status - информация о текущем локальном репозитории.

git log - показывает историю commit.
git log -- *ИМЯ ФАЙЛА* - показывает историю commit затрагивающих только указанный файл.
git log -p -- *ИМЯ ФАЙЛА* - показывает историю и изменения затрагивающих только указанный файл.
git log --grep 'ЧАСТЬ COMMIT' - поиск commit по куску его описания.
git log -S'КУСОК КОДА' -p - поиск commit по куску кода.
git log --all - поиск commit по всем веткам.
git log --oneline --graph - показывает графиком историю commit во всех ветках.
git log --oneline --graph *НАЗВАНИЕ ВЕТКИ* - показывает графиком историю commit в указанной ветке.

mode = (hard - полный откат), (soft - откат + сохр РК + сохр в index), (mixed - откат + сохр в РК)
git reset <mode> <commit-id> - откатывает состояние проекта до указанного коммита.
git reset <mode> HEAD~<num> 

git show *ИДЕНТИФИКАТОР ИТЛИ КУСОК ИДЕНТИФИКАТОРА COMMIT* - показывает изменеия внесённые commit.

git blame -- <path> - показывает кто последний менял указанный файл.

git commit *ИМЯ ФАЙЛА* - создаёт commit с данными по изменению.
git commit -a - создаёт commit ко всем отслеживаемым файлам.
git commit -m 'КОММЕНТАРИЙ' - создаёт commit с комментарием прямо из консоли.

git checkout *НАЗВАНИЕ ВЕТКИ* - переключение на указанную ветку.
git checkout --track *ИМЯ УДАЛЁННОЙ ВЕТКИ* - клонирование удалённой ветки.
git checkout -b gh-pages - создание ветки для сайта.
git branch *НАЗВАНИЕ ВЕТКИ* - создание новой ветки.
git branch -d *НАЗВАНИЕ ВЕТКИ* - удаление указанной ветки.
git branch *ИМЯ ЛОКАЛЬНОЙ ВЕТКИ* *ИМЯ УДАЛЁННОЙ ВЕТКИ* - клонирование удалённой ветки.
git merge --no-ff *НАЗВАНИЕ ВЕТКИ* - сливает все изменения из указанной ветки в ветку из которой выполняется команда.
git merge --abort - отменяет ранее проведенное слияние.

git tag - показывает список созданныхз тегов.
git tag -a *НАЗВАНИЕ ТЕГА* -m 'КОММЕНТАРИЙ' - добавляет тег.
git tag -a *НАЗВАНИЕ ТЕГА* -m 'КОММЕНТАРИЙ' <commit-id> - добавляет тег к указанному commit.
git push --tags - отправляет теги на удалённый репозиторий.
git tag -d *НАЗВАНИЕ ТЕГА* - удаляет указанный тег.
git push --delete *ИМЯ РЕПОЗИТОРИЯ* *НАЗВАНИЕ ТЕГА* - удаляет тег с удалённого репозитория.

git remote add *ИМЯ РЕПОЗИТОРИЯ* *ССЫЛКА НА РЕПОЗИТОРИЙ* - привязывает удалённый репозиторий к локальному.
git remote -v - просмотр подключенных удалённых репозиториев GitHub

git clone *ССЫЛКА НА РЕПОЗИТОРИЙ* - копирует содержимое удалённого репозитория GitHub в локальный.
git fetch *ИМЯ РЕПОЗИТОРИЯ* - копирует изменения из удалённого репозитория в локальный.
git push -u *РЕПОЗИТОРИЙ* *ВЕТКА* - загружает изменения с локального репозитория на удалённый репозиторий GitHub.
	-u - создаёт отслеживаемую ветку при использовании git push
git push --delete *ИМЯ РЕПОЗИТОРИЯ* *НАЗВАНИЕ ВЕТКИ* - удаляет ветку на удалённом репозитории.
git pull - объеденённая команда fetch затем merge. Получает данные и сразу приступает к их слиянию.

